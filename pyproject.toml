[project]
name = "ytptube"
version = "1.0.0"
description = "A WebUI for yt-dlp with concurrent downloads support, presets and scheduled tasks and many more."
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [{ name = "Abdulmohsen", email = "contact@arabcoders.org" }]
dependencies = [
  # Windows‐only
  "tzdata; sys_platform == 'win32'",
  "python-magic-bin; sys_platform == 'win32'",
  # Non‐Windows
  "python-magic>=0.4.27; sys_platform != 'win32'",
  # Cross‐platform
  "python-socketio>=5.11.1",
  "aiohttp>=3.9.3",
  "caribou>=0.3.0",
  "coloredlogs>=15.0.1",
  "aiocron>=1.8",
  "python-dotenv>=1.0.1",
  "debugpy>=1.8.1",
  "httpx",
  "async-timeout",
  "pyjson5",
  "curl_cffi>=0.13",
  "pysubs2",
  "regex",
  "mutagen",
  "brotli",
  "brotlicffi",
  "anyio",
  "yt-dlp",
  "platformdirs",
  "multidict==6.5.1",
  "dateparser>=1.2.1",
  "defusedxml>=0.7.1",
  "zipstream-ng>=1.8.0",
  "apprise>=1.9.3",
  "bgutil-ytdlp-pot-provider>=1.2.1",
  "pycryptodome>=3.23.0",
]

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[project.optional-dependencies]
installer = [
  "pyinstaller",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
#select = ["E4", "E7", "E9", "F", "G", "W"]
#ignore = ["PTH", "G0", "G1", "G201"]
select = [
  "ALL", # include all the rules, including new ones
]
ignore = [
  #### modules
  "ANN", # flake8-annotations
  "COM", # flake8-commas
  "C90", # mccabe complexity
  "DJ",  # django
  "EXE", # flake8-executable
  "T10", # debugger
  "TID", # flake8-tidy-imports

  #### specific rules
  "D100",    # ignore missing docs
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D200",
  "D205",
  "D212",
  "D400",
  "D401",
  "D415",
  "E402",    # false positives for local imports
  "E501",    # line too long
  "TRY003",  # external messages in exceptions are too verbose
  "TD002",
  "TD003",
  "FIX002",  # too verbose descriptions of todos,
  "N806",    # variable names should be snake_case
  "PTH",     # prefer using absolute imports
  "PGH003",
  "D404",
  "PLR0913",
  "INP001",
  "G004",
  "SIM105",
  "SIM300",
  "BLE001",
  "TRY400",
  "S104",
  "PLR2004",
  "S110",
  "N812",
  "S108",
  "RUF006",
  "RUF012",
  "RUF013",
  "TRY002",
  "TRY401",
  "A001",
  "A002",
  "SLF001",
  "FBT001",
  "FBT002",
  "TRY300",
  "PLR0911",
  "PLR0912",
  "PLR0915",
  "PLW2901",
  "ERA001",
  "S101",
  "LOG015",
  "PLC0415",
  "S603",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.autopep8]
--max-line-length = 120

[tool.uv]
link-mode = "copy"
